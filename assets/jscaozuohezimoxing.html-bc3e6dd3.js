import{_ as t,o as e,c as o,e as s}from"./app-5a1615ea.js";const r="/myblogs/assets/image-20231123161254983-0df5afb2.png",n="/myblogs/assets/image-20231123161458029-2c709558.png",d="/myblogs/assets/image-20231123161625363-fc308c8b.png",l={},a=s('<h2 id="元素偏移量offset系列" tabindex="-1"><a class="header-anchor" href="#元素偏移量offset系列" aria-hidden="true">#</a> 元素偏移量offset系列</h2><blockquote><p>offset系列相关属性可以动态地获取该元素的位置(偏移)、大小等</p></blockquote><ul><li>获取元素距离带定位父元素的位置</li><li>获得元素自身的宽度高度大小(<strong>注：返回的数值都不带单位</strong>)</li></ul><p><img src="'+r+'" alt="image-20231123161254983"></p><p>offset系列常用属性：</p><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>element.offsetParent</td><td>返回该元素<strong>带有定位的父级元素</strong>，如果父级元素没有定位则返回body</td></tr><tr><td>element.offsetTop</td><td>返回该元素<strong>上外边框相对带有定位的父级元素上内边框的偏移</strong>，如果父级元素没有定位则返回相对body上方的偏移</td></tr><tr><td>element.offsetLeft</td><td>返回该元素<strong>左外边框相对带有定位的父级元素左内边框的偏移</strong>，如果父级元素没有定位则返回相对body左侧的偏移</td></tr><tr><td>element.offsetWidth</td><td>返回该元素包括<strong>padding+border+content</strong>的宽度</td></tr><tr><td>element.offsetHeight</td><td>返回该元素包括<strong>padding+border+content</strong>的高度</td></tr></tbody></table><p><strong>注：</strong> 1.如果存在垂直滚动条，<strong>offsetWidth也包括垂直滚动条的宽度</strong>；如果存在水平滚动条，<strong>offsetHeight也包括水平滚动条的高度</strong> 2.当需要获得某个元素在页面上的偏移量，将这个元素的<strong>offsetLeft</strong>和<strong>offsetTop</strong>和该元素的<strong>offsetParent的相同属性</strong>相加，再加上<strong>offsetParent的相应方向的边框值</strong>，如此循环到根元素，就可获得</p><h3 id="offset和style的区别" tabindex="-1"><a class="header-anchor" href="#offset和style的区别" aria-hidden="true">#</a> offset和style的区别</h3><table><thead><tr><th>offset</th><th>style</th></tr></thead><tbody><tr><td>offset可以得到任意样式表中的样式值</td><td>style只能得到行内样式表中的样式值</td></tr><tr><td>offset系列获得的数值是没有单位的</td><td>style.width得到的值是带有单位的字符串</td></tr><tr><td>offsetWidth包含padding+border+width</td><td>style.width得到的值不包含padding+border</td></tr><tr><td>offsetWidth是只读属性</td><td>style.width可读写</td></tr><tr><td><strong>想要获取元素大小位置，用offset更合适</strong></td><td><strong>想要给元素更改值，则需要用style</strong></td></tr></tbody></table><h2 id="元素可视区client系列" tabindex="-1"><a class="header-anchor" href="#元素可视区client系列" aria-hidden="true">#</a> 元素可视区client系列</h2><blockquote><p>通过client相关的属性可以动态地得到该元素的边框大小，元素大小等，不带单位</p></blockquote><p><img src="'+n+'" alt="image-20231123161458029"></p><p>属性作用element.clientTop返回该元素<strong>上边框大小</strong>element.clientLeft返回该元素<strong>左边框大小</strong>element.clientWidth返回该元素包括<strong>padding+content</strong>的宽度，不含边框element.clientHeight返回该元素包括<strong>padding+content</strong>的高度，不含边框</p><h2 id="元素滚动scroll系列" tabindex="-1"><a class="header-anchor" href="#元素滚动scroll系列" aria-hidden="true">#</a> 元素滚动scroll系列</h2><blockquote><p>使用scroll系列相关属性可以动态获得该元素的大小、滚动距离等，不带单位</p></blockquote><p><img src="'+d+'" alt="image-20231123161625363"></p><p>属性作用element.scrollTop返回<strong>被卷去的上侧距离</strong>，从内容顶部到上内边框element.scrollLeft返回<strong>被卷去的左侧距离</strong>element.scrollWidth返回该元素<strong>自身实际的宽度</strong>，不含边框element.scrollHeight返回该元素<strong>自身实际的高度</strong>，不含边框.</p>',17),g=[a];function i(f,c){return e(),o("div",null,g)}const p=t(l,[["render",i],["__file","jscaozuohezimoxing.html.vue"]]);export{p as default};
